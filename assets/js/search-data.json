{
  
    
        "post0": {
            "title": "Multidimensional Scaling(MDS, 다차원 척도법)",
            "content": "Multidimensional Scaling(MDS, 다차원 척도법) . 선형 변환의 차원 축소 기법인 동시에 변수 추출 기법인 다차원 척도법에 대해서 설명하겠습니다. . 다차원 척도법은 $n$개의 개별적인 객체들 사이의 유사도 또는 비유사도를 측정하여 얻어진 distance matrix를 이용하여 고차원의 공간에서 존재하는 객체 간의 거리(유사도) 정보가 저차원의 공간에서도 최대한 보존되는 좌표계(coordinate)를 찾는 것을 목표로 합니다. . 간단한 Distance matrix $ mathbf{D}$를 예로 들자면 아래와 같은 행렬처럼 나타낼 수 있습니다. . . 우리가 흔히 접하는 일반적인 데이터 $ mathbf{X}$를 이용하여 distance matrix $ mathbf{D}$를 표현하는 것은 쉽습니다(Cosine, Jaccard, Euclidean, Manhattan 등을 이용하여 $ mathbf{X} Rightarrow mathbf{D}$). 하지만 distance matrix $ mathbf{D}$를 원 데이터 $ mathbf{X}$로 나타내는 것은 불가능합니다. 왜냐하면 위 행렬을 예시로 든다면 사과를 임의의 차원의 벡터로 표현할 수 있는 방법이 없기 때문입니다. 따라서 또 다른 선형 변환 차원 축소법인 동시에 변수 추출법인 PCA보다 MDS의 범용성이 훨씬 높습니다. 즉, PCA를 적용할 수 있는 모든 데이터는 MDS를 적용 가능하지만, MDS를 적용할 수 있는 모든 데이터에 대해서는 PCA를 적용할 수 없습니다. . 구체적인 MDS의 절차는 다음과 같습니다. . 우선, 데이터가 거리(유사도) 정보로 이루어져 있지 않다면 우선 거리(유사도) 행렬로 만들어줍니다. 만약에 객체들 사이의 좌표값들이 존재할 경우 그 객체간의 거리(유사도) 를 계산할 수 있습니다. . 거리 행렬이 가져야하는 특징은 . (1) $d_{ij} geq 0$, 임의의 두 객체 사이의 거리는 0보다 크거나 같아야 한다. (2) $d_{ii} = 0$, 나와 나 사이의 거리는 0이어햐 한다. (3) $d_{ij}=d_{ji}$, 객체 $i$와 객체 $j$ 사이의 거리는 같으므로 $d_{ij}=d_{ji}$인 symmetric matrix이아야 한다. (1), (2), (3)에 추가적으로 거리는 삼각 부등식이라 불리는 $d_{ij} leq d_{ik}+d_{jk}$를 만족해야 한다. . . 원 데이터 $ mathbf{X}$ matrix($d times n$)이고 이를 $ mathbf{D}$ matrix($n times n$)로 만듭니다. $ mathbf{D}$는 upper triangle과 lower triangle이 서로 대칭입니다. . 둘째, 거리 정보를 보존하는 좌표계를 찾습니다. . 위에서 생선한 $ mathbf{D}$ matrix에서 index를 $r$과 $s$로 하는 임의의 객체에 대해서 . $d_{rs}^2 = ( mathbf{x}{r}- mathbf{x}{s})^T( mathbf{x}{r}- mathbf{x}{s})$ 로 나타낼 수 있습니다. 하지만 $ mathbf{x}$에 대한 정보를 다이렉트로 찾기가 어렵기 때문에 $ mathbf{B}$라는 inner product로 만들어진 $n times n$ 매개 행렬을 이용할 겁니다. $ mathbf{B}$ matrix에서 index를 $r$과 $s$로 하는 임의의 객체는 $b_{rs} = mathbf{x}{r}^T mathbf{x}{s}$로 벡터의 내적으로 표현합니다. 즉, $ mathbf{D}{n times n} Rightarrow mathbf{B}{n times n} Rightarrow mathbf{X}_{d times n}$의 흐름을 따릅니다. . 연산의 용이성을 위해 모든 변수의 평균은 0이라는 가정을 합니다. . $ sum_{r=1}^{n}x_{ri} = 0, i=1,2,...,p$ $d_{rs}^2 = ( mathbf{x}_{r}- mathbf{x}_{s})^T( mathbf{x}_{r}- mathbf{x}_{s})= mathbf{x}_{r}^T mathbf{x}_{r}+ mathbf{x}_{s}^T mathbf{x}_{s}-2 mathbf{x}_{r}^T mathbf{x}_{s}$ . 이제 Inner product matrix를 만들기 위해 식을 정리합니다. . 먼저 $r$에 대해서 평균: . ${1 over n} sum_{r=1}^{n}d_{rs}^2 = {1 over n} sum_{r=1}^{n} mathbf{x}{r}^T mathbf{x}{r} + {1 over n} sum_{r=1}^{n} mathbf{x}{s}^T mathbf{x}{s} - {2 over n} sum_{r=1}^{n} mathbf{x}{r}^T mathbf{x}{s}$ . $= {1 over n} sum_{r=1}^{n} mathbf{x}_{r}^T mathbf{x}_{r} + mathbf{x}_{s}^T mathbf{x}_{s}$, since $ sum_{r=1}^{n} mathbf{x}_{ri} = 0$ . 위 식을 다시 정리하면, . $ mathbf{x}_s^T mathbf{x}_{s} = {1 over n} sum_{r=1}^{n}d_{rs}^2-{1 over n} sum_{r=1}^{n} mathbf{x}_{r}^T mathbf{x}_r$ . $s$에 대해서 평균: . ${1 over n} sum_{s=1}^{n}d_{rs}^2 = {1 over n} sum_{s=1}^{n} mathbf{x}{r}^T mathbf{x}{r} + {1 over n} sum_{s=1}^{n} mathbf{x}{s}^T mathbf{x}{s} - {2 over n} sum_{s=1}^{n} mathbf{x}{r}^T mathbf{x}{s}$ . $= mathbf{x}_{r}^T mathbf{x}_{r} + {1 over n} sum_{s=1}^{n} mathbf{x}_{s}^T mathbf{x}_{s}$ . 마찬가지로 정리하면, . $ mathbf{x}_r^T mathbf{x}_{r} = {1 over n} sum_{s=1}^{n}d_{rs}^2-{1 over n} sum_{s=1}^{n} mathbf{x}_{s}^T mathbf{x}_s$ . ${1 over n^2} sum_{r=1}^{n} sum_{r=1}^{n}d_{rs}^2 = {1 over n^2} sum_{r=1}^{n} sum_{r=1}^{n} mathbf{x}{r}^T mathbf{x}{r} + {1 over n^2} sum_{r=1}^{n} sum_{r=1}^{n} mathbf{x}{s}^T mathbf{x}{s} -$ . ${2 over n^2} sum_{r=1}^{n} sum_{r=1}^{n} mathbf{x}_{r}^T mathbf{x}_{s}$ $= {1 over n} sum_{r=1}^{n} mathbf{x}_{r}^T mathbf{x}_{r} + {1 over n} sum_{s=1}^{n} mathbf{x}_{s}^T mathbf{x}_{s}$ $= {2 over n} sum_{r=1}^{n} mathbf{x}_{r}^T mathbf{x}_r$, 첨자만 다를 뿐이므로 ${2 over n} sum_{r=1}^{n} mathbf{x}_{r}^T mathbf{x}_{r} = {1 over n^2} sum_{r=1}^{n} sum_{s=1}^{n}d_{rs}^{2}$ . $ mathbf{D}$를 정리하여 구한 $ mathbf{x}r^T mathbf{x}{r}$, $ mathbf{x}s^T mathbf{x}{s}$, ${2 over n} sum_{r=1}^{n} mathbf{x}{r}^T mathbf{x}{r}$를 이용하여 $b_{rs}$를 구합니다. . $b_{rs} = mathbf{x}_{r}^T mathbf{x}_s$ . $= -{1 over 2}(d_{rs}^2 - mathbf{x}_{r}^T mathbf{x}_{r} - mathbf{x}_{s}^T mathbf{x}_{s})$ $=-{1 over 2}(d_{rs}^2 - {1 over n} sum_{s=1}^{n}d_{rs}^2 + {1 over n} sum_{s=1}^{n} mathbf{x}_{s}^T mathbf{x}_{s} - {1 over n} sum_{r=1}^{n}d_{rs}^2 +{1 over n} sum_{r=1}^{n} mathbf{x}_{r}^{T} mathbf{x}_{r})$ $=-{1 over 2}(d_{rs}^2 - {1 over n} sum_{s=1}^{n}d_{rs}^2 - {1 over n} sum_{r=1}^{n}d_{rs}^2 +{1 over n^2} sum_{r=1}^{n} sum_{s=1}^{n}d_{rs}^2$ $=a_{rs} -a_{r cdot}-a_{ cdot s}+a_{ cdot cdot}$ . where $a_{rs}=-{1 over 2}d_{rs}^2, a_{r cdot} = {1 over n} sum_{s}a_{rs}, a_{ cdot s} = {1 over n} sum_{r}a_{rs}, a_{ cdot cdot} = {1 over n^2} sum_{r} sum_{s}a_{rs}$ . $ mathbf{D}$에서 우리가 알 수 있는 정보는 $d_{rs}^2$밖에 없으므로 $b_{rs}$를 $d_{rs}^2$에 대한 정보로 모두 변환합니다. . 결국 마지막 식 $a_{rs} -a_{r cdot}-a_{ cdot s}+a_{ cdot cdot}$를 통해 inner product matrix의 각 항목의 값들은 distance matrix의 각 항목의 값들의 선형 결합으로 표현 가능하다는 것을 의미합니다. . 최종적으로 $[ mathbf{A}]{rs} = a{rs}$을 얻게 되어 $ mathbf{A}$ 와 $ mathbf{H}= mathbf{I}-{1 over n} mathbf{11}^T$라는 행렬을 통해 $ mathbf{B}= mathbf{HAH}$를 구하게 됩니다. $( mathbf{D} Rightarrow mathbf{B})$ . 마지막으로 $ mathbf{B}$를 이용하여 $ mathbf{X}$를 구합니다. . $ mathbf{X}$를 $n times p$ matrix$(p &lt; n)$라고 할 때, . $ mathbf{B} = mathbf{XX}^T rightarrow rank( mathbf{B}) = rank( mathbf{XX}^T) = rank( mathbf{X})=p$ 가 됩니다. . 두 벡터의 내적이므로 $ mathbf{B}$는 symmetric이고 positive semi-definite하며 rank는 $p$ 인 상태입니다. 따라서 Eigen-decomposition에 의해서 $p$개의 non-negative eigenvalues와 $(n - p)$개의 zero eigenvalues를 가지게 됩니다. 따라서, . $ mathbf{B} = mathbf{V} Lambda mathbf{V}^T, hspace{0.2cm} Lambda=diag( lambda_1, lambda_2, cdots, lambda_n), hspace{0.2cm} mathbf{V} =[ mathbf{v}_1, mathbf{v}_2, cdots, mathbf{v}_n]$ 로 정리되는데, . $(n-p)$개의 zero eigenvalues를 가지기 때문에, . $ mathbf{B}_1 = mathbf{V}_1 Lambda_1 mathbf{V}_1^T, hspace{0.2cm} Lambda_1=diag( lambda_1, lambda_2, cdots, lambda_p), hspace{0.2cm} mathbf{V}_1 =[ mathbf{v}_1, mathbf{v}_2, cdots, mathbf{v}_p]$로 정리가 됩니다. . 따라서 우리가 최종적으로 원하는 $ mathbf{X}$는 . $ mathbf{X} mathbf{X}^T = ( mathbf{V}_1 Lambda_1^{1 over 2})( mathbf{V}_1 Lambda_1^{1 over 2})^T$가 되므로 $ therefore mathbf{X} = mathbf{V}_1 Lambda_1^{1 over 2}$ $( mathbf{B} Rightarrow mathbf{X})$ . 다시 정리하자면, MDS는 거리(유사도) 정보 행렬 $ mathbf{D}$를 이용하여 $d_{rs}^2$을 구하고 내적 행렬 $ mathbf{B}$를 $d_{rs}^2$의 선형 결합으로 나타내어 저차원의 선형 주축으로 이루어진 좌표계 $ mathbf{X}$를 도출하는 것입니다. .",
            "url": "https://jaeeon-park.github.io/eeoonn_blog/mds/dimensionality%20reduction/2021/07/09/Multidimensional-Scaling(MDS,-%EB%8B%A4%EC%B0%A8%EC%9B%90-%EC%B2%99%EB%8F%84%EB%B2%95).html",
            "relUrl": "/mds/dimensionality%20reduction/2021/07/09/Multidimensional-Scaling(MDS,-%E1%84%83%E1%85%A1%E1%84%8E%E1%85%A1%E1%84%8B%E1%85%AF%E1%86%AB-%E1%84%8E%E1%85%A5%E1%86%A8%E1%84%83%E1%85%A9%E1%84%87%E1%85%A5%E1%86%B8).html",
            "date": " • Jul 9, 2021"
        }
        
    
  
    
        ,"post1": {
            "title": "Fastpages Notebook Blog Post",
            "content": "About . This notebook is a demonstration of some of capabilities of fastpages with notebooks. . With fastpages you can save your jupyter notebooks into the _notebooks folder at the root of your repository, and they will be automatically be converted to Jekyll compliant blog posts! . Front Matter . The first cell in your Jupyter Notebook or markdown blog post contains front matter. Front matter is metadata that can turn on/off options in your Notebook. It is formatted like this: . # &quot;My Title&quot; &gt; &quot;Awesome summary&quot; - toc:true- branch: master - badges: true - comments: true - author: Hamel Husain &amp; Jeremy Howard - categories: [fastpages, jupyter] . Setting toc: true will automatically generate a table of contents | Setting badges: true will automatically include GitHub and Google Colab links to your notebook. | Setting comments: true will enable commenting on your blog post, powered by utterances. | . The title and description need to be enclosed in double quotes only if they include special characters such as a colon. More details and options for front matter can be viewed on the front matter section of the README. . Markdown Shortcuts . A #hide comment at the top of any code cell will hide both the input and output of that cell in your blog post. . A #hide_input comment at the top of any code cell will only hide the input of that cell. . The comment #hide_input was used to hide the code that produced this. . put a #collapse-hide flag at the top of any cell if you want to hide that cell by default, but give the reader the option to show it: . import pandas as pd import altair as alt . . put a #collapse-show flag at the top of any cell if you want to show that cell by default, but give the reader the option to hide it: . cars = &#39;https://vega.github.io/vega-datasets/data/cars.json&#39; movies = &#39;https://vega.github.io/vega-datasets/data/movies.json&#39; sp500 = &#39;https://vega.github.io/vega-datasets/data/sp500.csv&#39; stocks = &#39;https://vega.github.io/vega-datasets/data/stocks.csv&#39; flights = &#39;https://vega.github.io/vega-datasets/data/flights-5k.json&#39; . . place a #collapse-output flag at the top of any cell if you want to put the output under a collapsable element that is closed by default, but give the reader the option to open it: . print(&#39;The comment #collapse-output was used to collapse the output of this cell by default but you can expand it.&#39;) . The comment #collapse-output was used to collapse the output of this cell by default but you can expand it. . . Interactive Charts With Altair . Charts made with Altair remain interactive. Example charts taken from this repo, specifically this notebook. . Example 1: DropDown . # use specific hard-wired values as the initial selected values selection = alt.selection_single( name=&#39;Select&#39;, fields=[&#39;Major_Genre&#39;, &#39;MPAA_Rating&#39;], init={&#39;Major_Genre&#39;: &#39;Drama&#39;, &#39;MPAA_Rating&#39;: &#39;R&#39;}, bind={&#39;Major_Genre&#39;: alt.binding_select(options=genres), &#39;MPAA_Rating&#39;: alt.binding_radio(options=mpaa)} ) # scatter plot, modify opacity based on selection alt.Chart(df).mark_circle().add_selection( selection ).encode( x=&#39;Rotten_Tomatoes_Rating:Q&#39;, y=&#39;IMDB_Rating:Q&#39;, tooltip=&#39;Title:N&#39;, opacity=alt.condition(selection, alt.value(0.75), alt.value(0.05)) ) . Example 2: Tooltips . alt.Chart(df).mark_circle().add_selection( alt.selection_interval(bind=&#39;scales&#39;, encodings=[&#39;x&#39;]) ).encode( alt.X(&#39;Rotten_Tomatoes_Rating&#39;, type=&#39;quantitative&#39;), alt.Y(&#39;IMDB_Rating&#39;, type=&#39;quantitative&#39;, axis=alt.Axis(minExtent=30)), # y=alt.Y(&#39;IMDB_Rating:Q&#39;, ), # use min extent to stabilize axis title placement tooltip=[&#39;Title:N&#39;, &#39;Release_Date:N&#39;, &#39;IMDB_Rating:Q&#39;, &#39;Rotten_Tomatoes_Rating:Q&#39;] ).properties( width=500, height=400 ) . Example 3: More Tooltips . label = alt.selection_single( encodings=[&#39;x&#39;], # limit selection to x-axis value on=&#39;mouseover&#39;, # select on mouseover events nearest=True, # select data point nearest the cursor empty=&#39;none&#39; # empty selection includes no data points ) # define our base line chart of stock prices base = alt.Chart().mark_line().encode( alt.X(&#39;date:T&#39;), alt.Y(&#39;price:Q&#39;, scale=alt.Scale(type=&#39;log&#39;)), alt.Color(&#39;symbol:N&#39;) ) alt.layer( base, # base line chart # add a rule mark to serve as a guide line alt.Chart().mark_rule(color=&#39;#aaa&#39;).encode( x=&#39;date:T&#39; ).transform_filter(label), # add circle marks for selected time points, hide unselected points base.mark_circle().encode( opacity=alt.condition(label, alt.value(1), alt.value(0)) ).add_selection(label), # add white stroked text to provide a legible background for labels base.mark_text(align=&#39;left&#39;, dx=5, dy=-5, stroke=&#39;white&#39;, strokeWidth=2).encode( text=&#39;price:Q&#39; ).transform_filter(label), # add text labels for stock prices base.mark_text(align=&#39;left&#39;, dx=5, dy=-5).encode( text=&#39;price:Q&#39; ).transform_filter(label), data=stocks ).properties( width=500, height=400 ) . Data Tables . You can display tables per the usual way in your blog: . df[[&#39;Title&#39;, &#39;Worldwide_Gross&#39;, &#39;Production_Budget&#39;, &#39;Distributor&#39;, &#39;MPAA_Rating&#39;, &#39;IMDB_Rating&#39;, &#39;Rotten_Tomatoes_Rating&#39;]].head() . Title Worldwide_Gross Production_Budget Distributor MPAA_Rating IMDB_Rating Rotten_Tomatoes_Rating . 0 The Land Girls | 146083.0 | 8000000.0 | Gramercy | R | 6.1 | NaN | . 1 First Love, Last Rites | 10876.0 | 300000.0 | Strand | R | 6.9 | NaN | . 2 I Married a Strange Person | 203134.0 | 250000.0 | Lionsgate | None | 6.8 | NaN | . 3 Let&#39;s Talk About Sex | 373615.0 | 300000.0 | Fine Line | None | NaN | 13.0 | . 4 Slam | 1087521.0 | 1000000.0 | Trimark | R | 3.4 | 62.0 | . Images . Local Images . You can reference local images and they will be copied and rendered on your blog automatically. You can include these with the following markdown syntax: . ![](my_icons/fastai_logo.png) . . Remote Images . Remote images can be included with the following markdown syntax: . ![](https://image.flaticon.com/icons/svg/36/36686.svg) . . Animated Gifs . Animated Gifs work, too! . ![](https://upload.wikimedia.org/wikipedia/commons/7/71/ChessPawnSpecialMoves.gif) . . Captions . You can include captions with markdown images like this: . ![](https://www.fast.ai/images/fastai_paper/show_batch.png &quot;Credit: https://www.fast.ai/2020/02/13/fastai-A-Layered-API-for-Deep-Learning/&quot;) . . Other Elements . GitHub Flavored Emojis . Typing I give this post two :+1:! will render this: . I give this post two :+1:! . Tweetcards . Typing &gt; twitter: https://twitter.com/jakevdp/status/1204765621767901185?s=20 will render this: Altair 4.0 is released! https://t.co/PCyrIOTcvvTry it with: pip install -U altairThe full list of changes is at https://t.co/roXmzcsT58 ...read on for some highlights. pic.twitter.com/vWJ0ZveKbZ . &mdash; Jake VanderPlas (@jakevdp) December 11, 2019 . Youtube Videos . Typing &gt; youtube: https://youtu.be/XfoYk_Z5AkI will render this: . Boxes / Callouts . Typing &gt; Warning: There will be no second warning! will render this: . Warning: There will be no second warning! . Typing &gt; Important: Pay attention! It&#39;s important. will render this: . Important: Pay attention! It&#8217;s important. . Typing &gt; Tip: This is my tip. will render this: . Tip: This is my tip. . Typing &gt; Note: Take note of this. will render this: . Note: Take note of this. . Typing &gt; Note: A doc link to [an example website: fast.ai](https://www.fast.ai/) should also work fine. will render in the docs: . Note: A doc link to an example website: fast.ai should also work fine. . Footnotes . You can have footnotes in notebooks, however the syntax is different compared to markdown documents. This guide provides more detail about this syntax, which looks like this: . For example, here is a footnote {% fn 1 %}. And another {% fn 2 %} {{ &#39;This is the footnote.&#39; | fndetail: 1 }} {{ &#39;This is the other footnote. You can even have a [link](www.github.com)!&#39; | fndetail: 2 }} . For example, here is a footnote 1. . And another 2 . 1. This is the footnote.↩ . 2. This is the other footnote. You can even have a link!↩ .",
            "url": "https://jaeeon-park.github.io/eeoonn_blog/jupyter/2020/02/20/test.html",
            "relUrl": "/jupyter/2020/02/20/test.html",
            "date": " • Feb 20, 2020"
        }
        
    
  
    
        ,"post2": {
            "title": "An Example Markdown Post",
            "content": "Example Markdown Post . Basic setup . Jekyll requires blog post files to be named according to the following format: . YEAR-MONTH-DAY-filename.md . Where YEAR is a four-digit number, MONTH and DAY are both two-digit numbers, and filename is whatever file name you choose, to remind yourself what this post is about. .md is the file extension for markdown files. . The first line of the file should start with a single hash character, then a space, then your title. This is how you create a “level 1 heading” in markdown. Then you can create level 2, 3, etc headings as you wish but repeating the hash character, such as you see in the line ## File names above. . Basic formatting . You can use italics, bold, code font text, and create links. Here’s a footnote 1. Here’s a horizontal rule: . . Lists . Here’s a list: . item 1 | item 2 | . And a numbered list: . item 1 | item 2 | Boxes and stuff . This is a quotation . . You can include alert boxes …and… . . You can include info boxes Images . . Code . You can format text and code per usual . General preformatted text: . # Do a thing do_thing() . Python code and output: . # Prints &#39;2&#39; print(1+1) . 2 . Formatting text as shell commands: . echo &quot;hello world&quot; ./some_script.sh --option &quot;value&quot; wget https://example.com/cat_photo1.png . Formatting text as YAML: . key: value - another_key: &quot;another value&quot; . Tables . Column 1 Column 2 . A thing | Another thing | . Tweetcards . Altair 4.0 is released! https://t.co/PCyrIOTcvvTry it with: pip install -U altairThe full list of changes is at https://t.co/roXmzcsT58 ...read on for some highlights. pic.twitter.com/vWJ0ZveKbZ . &mdash; Jake VanderPlas (@jakevdp) December 11, 2019 Footnotes . This is the footnote. &#8617; . |",
            "url": "https://jaeeon-park.github.io/eeoonn_blog/markdown/2020/01/14/test-markdown-post.html",
            "relUrl": "/markdown/2020/01/14/test-markdown-post.html",
            "date": " • Jan 14, 2020"
        }
        
    
  

  
  

  
      ,"page1": {
          "title": "About Me",
          "content": "This website is powered by fastpages 1. . a blogging platform that natively supports Jupyter notebooks in addition to other formats. &#8617; . |",
          "url": "https://jaeeon-park.github.io/eeoonn_blog/about/",
          "relUrl": "/about/",
          "date": ""
      }
      
  

  

  
  

  

  
  

  

  
  

  
  

  
  

  
      ,"page10": {
          "title": "",
          "content": "Sitemap: {{ “sitemap.xml” | absolute_url }} | .",
          "url": "https://jaeeon-park.github.io/eeoonn_blog/robots.txt",
          "relUrl": "/robots.txt",
          "date": ""
      }
      
  

}